<?xml version="1.0"?>
<!-- Simple example to demonstrate the DateTimeAxis class. -->
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" applicationComplete="init()">

    <mx:Script>
        <![CDATA[
        	import mx.charts.series.LineSeries;
        	import mx.charts.HitData;
        	import mx.charts.LinearAxis;

            import mx.collections.ArrayCollection;

            [Bindable] 
		     public var stockDataAC:ArrayCollection = new ArrayCollection([
		        {time:1,open:42.57,high:43.08,low:42.08,close:42.75},
		        {time:2,open:42.89,high:43.5,low:42.61,close:43.19},
		        {time:3,open:43.19,high:43.31,low:42.77,close:43.22},
		        {time:4,open:42.89,high:43,low:42.29,close:42.71},
		        {time:5,open:42.49,high:43.36,low:42.02,close:42.99},
		        {time:6,open:43,high:43.25,low:42.61,close:42.65},
		        {time:7,open:42.93,high:43.89,low:42.91,close:43.82},
		        {time:8,open:44,high:44.39,low:43.31,close:43.38},
		        {time:9,open:43.39,high:44.12,low:43.25,close:44},
		        {time:9,open:44.39,high:45.12,low:46.25,close:47},
		        {time:10,open:43.46,high:46.22,low:43.36,close:46.1}
		     ]);    
    		
            public function myParseFunction(s:String):Date { 
                // Get an array of Strings from the comma-separated String passed in.
                var a:Array = s.split(",");
                // Create the new Date object. Subtract one from 
                // the month property because months are zero-based in 
                // the Date constructor.
                var newDate:Date = new Date(a[0],a[1]-1,a[2]);
                return newDate;
            }
            
            private function init():void {
            	trace("series length = " + mychart.series.length);
            	var ls:LineSeries = new LineSeries();
            	ls.yField = "open";
            	//ls.items.
            }
            
            private function dtFunc(hd:HitData):String {
            	return "<b>" + hd.item.cond + "</b><br/>Time: " + hd.item.time + "<br/>Cu: " + hd.item.close;
            }
            
        ]]>
    </mx:Script>

    <mx:Panel title="DateTimeAxis Example" height="100%" width="100%">
    
        <mx:LineChart id="mychart" height="100%" width="100%"
            paddingRight="5" paddingLeft="5" 
            showDataTips="true" dataProvider="{stockDataAC}" dataTipFunction="dtFunc" seriesFilters="[]">
            
            <mx:horizontalAxis>
                <!--<mx:DateTimeAxis dataUnits="days" parseFunction="myParseFunction"/>-->
                <mx:LinearAxis/>
            </mx:horizontalAxis>
            
     

            <mx:verticalAxis>
                <mx:LinearAxis baseAtZero="false" />
            </mx:verticalAxis>

            <mx:series>
                <mx:LineSeries yField="close" xField="time" displayName="AAPL">
                	<mx:itemRenderer>
                		<mx:Component>
                			<mx:CircleItemRenderer />
                		</mx:Component>
                	</mx:itemRenderer>
                </mx:LineSeries>
                <mx:LineSeries yField="high" xField="time" displayName="goog">
                	<mx:itemRenderer>
                		<mx:Component>
                			<mx:CircleItemRenderer />
                		</mx:Component>
                	</mx:itemRenderer>
                </mx:LineSeries>
            </mx:series>

        </mx:LineChart>
        
    </mx:Panel>
</mx:Application>